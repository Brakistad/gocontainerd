# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/go/.devcontainer/base.Dockerfile

# [Choice] Go version (use -bullseye variants on local arm64/Apple Silicon): 1, 1.19, 1.18, 1-bullseye, 1.19-bullseye, 1.18-bullseye, 1-buster, 1.19-buster, 1.18-buster
ARG VARIANT="1.19-bullseye"
FROM mcr.microsoft.com/devcontainers/go:0-1.19-buster as base

# install curl
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends curl

WORKDIR /app

FROM base as dev

ARG USER_UID
ARG USER_GID
ARG USER_NAME=''
ARG USER_HOME=''
ARG USER_SHELL=''
ARG DOCKER_GID=''

ENV USER_UID=$USER_UID
ENV USER_GID=$USER_GID


# Install docker inside container, for development usage
COPY --from=library/docker:latest /usr/local/bin/docker /usr/bin/


# install watchexec inside container, for development usage
RUN curl -sL -o /tmp/watchdog.deb https://github.com/watchexec/watchexec/releases/download/1.10.3/watchexec-1.10.3-x86_64-unknown-linux-gnu.deb \
 && dpkg -i /tmp/watchdog.deb \
 && rm /tmp/watchdog.deb

COPY go.mod /app/go.mod
COPY go.sum /app/go.sum

RUN go mod download

ENV PATH=$PATH:${USER_HOME:-/home/${USER_NAME:-dev}}/.local/bin:${USER_HOME:-/home/${USER_NAME:-dev}}/.yarn/bin

# Change owner of $GOPATH to user
RUN chown -R ${USER_NAME:-dev}:${GROUP_NAME:-${USER_NAME:-dev}} $GOPATH

# Switch to non-root user
USER ${USER_NAME:-dev}

# Installing Go tools
RUN go install -v golang.org/x/tools/gopls@latest \
    && go install -v github.com/go-delve/delve/cmd/dlv@latest \
    && go install -v honnef.co/go/tools/cmd/staticcheck@latest

ENTRYPOINT ["/docker/entrypoint.sh"]